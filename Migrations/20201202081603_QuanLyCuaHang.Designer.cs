// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20201202081603_QuanLyCuaHang")]
    partial class QuanLyCuaHang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("ID_ChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DonGia")
                        .HasColumnType("int");

                    b.Property<int>("ID_DonHang")
                        .HasColumnType("int");

                    b.Property<int>("ID_ThucPham")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThang")
                        .HasColumnType("datetime2");

                    b.Property<int>("So_Luong")
                        .HasColumnType("int");

                    b.HasKey("ID_ChiTiet");

                    b.HasIndex("ID_DonHang");

                    b.HasIndex("ID_ThucPham");

                    b.ToTable("ChiTietDonHangs");
                });

            modelBuilder.Entity("API.Models.DonHang", b =>
                {
                    b.Property<int>("ID_DonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<string>("PTThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.HasKey("ID_DonHang");

                    b.HasIndex("ID_User");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("API.Models.KhoHang", b =>
                {
                    b.Property<int>("ID_KhoHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ID_ThucPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("ID_KhoHang");

                    b.HasIndex("ID_ThucPham");

                    b.ToTable("KhoHangs");
                });

            modelBuilder.Entity("API.Models.KhuyenMai", b =>
                {
                    b.Property<int>("ID_KM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Link_Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mo_ta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phan_Tram")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_KM");

                    b.ToTable("KhuyenMais");
                });

            modelBuilder.Entity("API.Models.NhapXuat", b =>
                {
                    b.Property<int>("ID_NhapXuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ID_ThucPham")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNX")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Nhap_Xuat")
                        .HasColumnType("bit");

                    b.Property<int>("So_Luong")
                        .HasColumnType("int");

                    b.HasKey("ID_NhapXuat");

                    b.HasIndex("ID_ThucPham");

                    b.ToTable("NhapXuats");
                });

            modelBuilder.Entity("API.Models.ThucPham", b =>
                {
                    b.Property<int>("ID_ThucPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GiaGoc")
                        .HasColumnType("int");

                    b.Property<int>("ID_KM")
                        .HasColumnType("int");

                    b.Property<string>("Link_Anh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiThucPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_ThucPham");

                    b.HasIndex("ID_KM");

                    b.ToTable("ThucPhams");
                });

            modelBuilder.Entity("API.Models.User", b =>
                {
                    b.Property<int>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Coin")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("API.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHangs")
                        .HasForeignKey("ID_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.ThucPham", "ThucPham")
                        .WithMany()
                        .HasForeignKey("ID_ThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("ThucPham");
                });

            modelBuilder.Entity("API.Models.DonHang", b =>
                {
                    b.HasOne("API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.KhoHang", b =>
                {
                    b.HasOne("API.Models.ThucPham", "ThucPham")
                        .WithMany()
                        .HasForeignKey("ID_ThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThucPham");
                });

            modelBuilder.Entity("API.Models.NhapXuat", b =>
                {
                    b.HasOne("API.Models.ThucPham", "ThucPham")
                        .WithMany()
                        .HasForeignKey("ID_ThucPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThucPham");
                });

            modelBuilder.Entity("API.Models.ThucPham", b =>
                {
                    b.HasOne("API.Models.KhuyenMai", "KhuyenMai")
                        .WithMany()
                        .HasForeignKey("ID_KM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMai");
                });

            modelBuilder.Entity("API.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
